<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, srgen, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, srgen, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </resheader>
  <data name="AbstractTypesNotSupported" xml:space="preserve">
    <value>The name of an abstract type or of an interface cannot be used in the serializer unless the type exposes a type proxy mechanism which references a non-abstract, non-generic, non-array type.</value>
  </data>
  <data name="AttributeConversionFailed" xml:space="preserve">
    <value>The attribute '{0}' was either not present on the node or could not be converted to the required type, '{1}'.</value>
  </data>
  <data name="CannotBeUnknownValidator" xml:space="preserve">
    <value>The parameter must reference a KnownValidator value other than KnownValidator.Unknown</value>
  </data>
  <data name="CannotCreateKnownValidatorThisWay" xml:space="preserve">
    <value>A self validator cannot be created in this way.</value>
  </data>
  <data name="CannotSelectAttributes" xml:space="preserve">
    <value>The object does not support attributes.</value>
  </data>
  <data name="CannotSetPropertyThroughIndirection" xml:space="preserve">
    <value>The property `{0}' cannot be set for the component because it is either read-only or the component itself is not castable or adaptable to the required interface facility, `{1}'.</value>
  </data>
  <data name="CannotSetTreeBuilderPropertyNow" xml:space="preserve">
    <value>The given property, `{0},' cannot be set at this time because there is no tree builder context, because the target component is not located within the hierarchy of instances currently accessible by the tree builder, or because the tree builder context has failed to supply a required service.</value>
  </data>
  <data name="CannotUseMissingOrErrorProperties" xml:space="preserve">
    <value>The property initialization for the validator cannot specify properties that are missing or are marked as obsolete or preliminary with an error status: {0}.</value>
  </data>
  <data name="DefaultDocumentNamespaceNotValid" xml:space="preserve">
    <value>The default document namespace is not valid for this argument.</value>
  </data>
  <data name="DefaultDocumentQualifiedNameNotValid" xml:space="preserve">
    <value>The default document qualified name is not valid in this context.</value>
  </data>
  <data name="EmptyPropertyNameInCompositeName" xml:space="preserve">
    <value>The composite property reference '{0}' contains a property name which is empty.</value>
  </data>
  <data name="ExternalSourceMissing" xml:space="preserve">
    <value>The external source '{0}' (content type: '{1}') could not be located or the Web client cannot provide access to this resource.</value>
  </data>
  <data name="ExternalSourceNotAllowedHere" xml:space="preserve">
    <value>The external source '{0}' (content type: '{1}') cannot be used here because it is annotated with '{2}'.</value>
  </data>
  <data name="FieldValueNotAccessible" xml:space="preserve">
    <value>The value of the field, '{0}', is not accessible.</value>
  </data>
  <data name="GenericCanonicalDocumentExceptionMessage" xml:space="preserve">
    <value>An error was encountered while processing the data of the canonical document.</value>
  </data>
  <data name="InstanceFactoryGenericError" xml:space="preserve">
    <value>The given combination of return type and/or arguments is not supported by this instance factory.</value>
  </data>
  <data name="InvalidDocumentQualifiedName" xml:space="preserve">
    <value>The text does not represent a valid document qualified name.</value>
  </data>
  <data name="ItemRequiredToExistInCollection" xml:space="preserve">
    <value>The item is required to exist in the collection.</value>
  </data>
  <data name="KnownStreamingSourceIntrinsicMissing" xml:space="preserve">
    <value>The given known streaming source type is not accessible because the application does not reference the dependent assembly, {0}.</value>
  </data>
  <data name="MethodReturnValueNotAccessible" xml:space="preserve">
    <value>The return value for the method is either not accessible or this method is not eligible for validation: `{0}'.</value>
  </data>
  <data name="NoConstructor" xml:space="preserve">
    <value>A constructor with matching arguments could not be found.</value>
  </data>
  <data name="NotDictionaryType" xml:space="preserve">
    <value>The target is not a dictionary type and is not able to be treated like one.</value>
  </data>
  <data name="ParseFailureAtProperty" xml:space="preserve">
    <value>The text for the property '{0}' cannot be parsed into a valid instance of type '{1}'.</value>
  </data>
  <data name="PropertiesSealedBecauseInUse" xml:space="preserve">
    <value>The properties of the instance cannot be modified because the object is already in use.</value>
  </data>
  <data name="PropertyValueNotAccessible" xml:space="preserve">
    <value>The value of the property, `{0}', is not accessible.</value>
  </data>
  <data name="ReferenceMissing" xml:space="preserve">
    <value>The reference '{0}' could not be resolved.</value>
  </data>
  <data name="ReferenceNotAllowedHere" xml:space="preserve">
    <value>The reference '{0}' cannot be used here because it is annotated with '{1}'.</value>
  </data>
  <data name="RegexValidatorDefaultMessage" xml:space="preserve">
    <value>The value does not match the required pattern.</value>
  </data>
  <data name="RegexValidatorDefaultMessageNegate" xml:space="preserve">
    <value>The value matches a pattern that is not permitted</value>
  </data>
  <data name="SelfValidationFailed" xml:space="preserve">
    <value>Self-validation of the instance failed.</value>
  </data>
  <data name="TypeMissing" xml:space="preserve">
    <value>The type is missing or could not be loaded automatically: {0}.</value>
  </data>
  <data name="ValidationErrorsOccurred" xml:space="preserve">
    <value>One or more validation errors occurred.</value>
  </data>
  <data name="ValidationNotDefined" xml:space="preserve">
    <value>Validation is not defined for the given type.</value>
  </data>
  <data name="ValidationResultsCannotRemove" xml:space="preserve">
    <value>Items cannot be removed or cleared from the ValidationResults, even using the interface implementation.</value>
  </data>
  <data name="ValidatorLengthMessageBetween" xml:space="preserve">
    <value>The text must be a minimum of {0} and a maximum of {1} characters in length.</value>
  </data>
  <data name="ValidatorLengthMessageBetweenNegate" xml:space="preserve">
    <value>The text must have fewer than {0} characters or more than {1} characters in length.</value>
  </data>
  <data name="ValidatorLengthMessageTooLong" xml:space="preserve">
    <value>This text may have a maximum {0} characters in length.</value>
  </data>
  <data name="ValidatorLengthMessageTooShort" xml:space="preserve">
    <value>This text may have a minimum {0} characters in length.</value>
  </data>
  <data name="ValidatorRequiredMessage" xml:space="preserve">
    <value>This value is required.</value>
  </data>
  <data name="ValidatorSpamGuardMessage" xml:space="preserve">
    <value>This text was not accepted because it was deemed to be spam.</value>
  </data>
</root>