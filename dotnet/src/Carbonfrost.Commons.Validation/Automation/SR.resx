<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, srgen, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, srgen, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</value>
  </resheader>
  <data name="CannotBeUnknownValidator" xml:space="preserve">
    <value>The parameter must reference a KnownValidator value other than KnownValidator.Unknown</value>
  </data>
  <data name="CannotCreateKnownValidatorThisWay" xml:space="preserve">
    <value>A self validator cannot be created in this way.</value>
  </data>
  <data name="CannotUseMissingOrErrorProperties" xml:space="preserve">
    <value>The property initialization for the validator cannot specify properties that are missing or are marked as obsolete or preliminary with an error status: {0}.</value>
  </data>
  <data name="FieldValueNotAccessible" xml:space="preserve">
    <value>The value of the field, '{0}', is not accessible.</value>
  </data>
  <data name="MethodReturnValueNotAccessible" xml:space="preserve">
    <value>The return value for the method is either not accessible or this method is not eligible for validation: `{0}'.</value>
  </data>
  <data name="NotDictionaryType" xml:space="preserve">
    <value>The target is not a dictionary type and is not able to be treated like one.</value>
  </data>
  <data name="PropertyValueNotAccessible" xml:space="preserve">
    <value>The value of the property, `{0}', is not accessible.</value>
  </data>
  <data name="RegexValidatorDefaultMessage" xml:space="preserve">
    <value>The value does not match the required pattern.</value>
  </data>
  <data name="SelfValidationFailed" xml:space="preserve">
    <value>Self-validation of the instance failed.</value>
  </data>
  <data name="ValidationErrorsOccurred" xml:space="preserve">
    <value>One or more validation errors occurred.</value>
  </data>
  <data name="ValidationNotDefined" xml:space="preserve">
    <value>Validation is not defined for the given type.</value>
  </data>
  <data name="ValidatorLengthMessageBetween" xml:space="preserve">
    <value>The text must be a minimum of {0} and a maximum of {1} characters in length.</value>
  </data>
  <data name="ValidatorLengthMessageTooLong" xml:space="preserve">
    <value>This text may have a maximum {0} characters in length.</value>
  </data>
  <data name="ValidatorLengthMessageTooShort" xml:space="preserve">
    <value>This text may have a minimum {0} characters in length.</value>
  </data>
  <data name="ValidatorRequiredMessage" xml:space="preserve">
    <value>This value is required.</value>
  </data>
  <data name="ValidatorRequiredMessageWithKey" xml:space="preserve">
    <value>{{Key}} is required.</value>
  </data>
</root>